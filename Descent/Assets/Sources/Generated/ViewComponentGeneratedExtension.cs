//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public ViewComponent view { get { return (ViewComponent)GetComponent(GameboardComponentIds.View); } }
        public bool hasView { get { return HasComponent(GameboardComponentIds.View); } }

        public Entity AddView(UnityEngine.GameObject newViewObject) {
            var component = CreateComponent<ViewComponent>(GameboardComponentIds.View);
            component.ViewObject = newViewObject;
            return AddComponent(GameboardComponentIds.View, component);
        }

        public Entity ReplaceView(UnityEngine.GameObject newViewObject) {
            var component = CreateComponent<ViewComponent>(GameboardComponentIds.View);
            component.ViewObject = newViewObject;
            ReplaceComponent(GameboardComponentIds.View, component);
            return this;
        }

        public Entity RemoveView() {
            return RemoveComponent(GameboardComponentIds.View);
        }
    }
}

    public partial class GameboardMatcher {

        static IMatcher _matcherView;

        public static IMatcher View {
            get {
                if(_matcherView == null) {
                    var matcher = (Matcher)Matcher.AllOf(GameboardComponentIds.View);
                    matcher.componentNames = GameboardComponentIds.componentNames;
                    _matcherView = matcher;
                }

                return _matcherView;
            }
        }
    }
