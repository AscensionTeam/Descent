//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public GameboardElementComponent gameboardElement { get { return (GameboardElementComponent)GetComponent(GameboardComponentIds.GameboardElement); } }
        public bool hasGameboardElement { get { return HasComponent(GameboardComponentIds.GameboardElement); } }

        public Entity AddGameboardElement(string newType, string newSubtype) {
            var component = CreateComponent<GameboardElementComponent>(GameboardComponentIds.GameboardElement);
            component.Type = newType;
            component.Subtype = newSubtype;
            return AddComponent(GameboardComponentIds.GameboardElement, component);
        }

        public Entity ReplaceGameboardElement(string newType, string newSubtype) {
            var component = CreateComponent<GameboardElementComponent>(GameboardComponentIds.GameboardElement);
            component.Type = newType;
            component.Subtype = newSubtype;
            ReplaceComponent(GameboardComponentIds.GameboardElement, component);
            return this;
        }

        public Entity RemoveGameboardElement() {
            return RemoveComponent(GameboardComponentIds.GameboardElement);
        }
    }
}

    public partial class GameboardMatcher {

        static IMatcher _matcherGameboardElement;

        public static IMatcher GameboardElement {
            get {
                if(_matcherGameboardElement == null) {
                    var matcher = (Matcher)Matcher.AllOf(GameboardComponentIds.GameboardElement);
                    matcher.componentNames = GameboardComponentIds.componentNames;
                    _matcherGameboardElement = matcher;
                }

                return _matcherGameboardElement;
            }
        }
    }
