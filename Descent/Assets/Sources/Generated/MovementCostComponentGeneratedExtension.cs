//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

namespace Entitas {

    public partial class Entity {

        public MovementCostComponent movementCost { get { return (MovementCostComponent)GetComponent(GameboardComponentIds.MovementCost); } }
        public bool hasMovementCost { get { return HasComponent(GameboardComponentIds.MovementCost); } }

        public Entity AddMovementCost(int newCost) {
            var component = CreateComponent<MovementCostComponent>(GameboardComponentIds.MovementCost);
            component.Cost = newCost;
            return AddComponent(GameboardComponentIds.MovementCost, component);
        }

        public Entity ReplaceMovementCost(int newCost) {
            var component = CreateComponent<MovementCostComponent>(GameboardComponentIds.MovementCost);
            component.Cost = newCost;
            ReplaceComponent(GameboardComponentIds.MovementCost, component);
            return this;
        }

        public Entity RemoveMovementCost() {
            return RemoveComponent(GameboardComponentIds.MovementCost);
        }
    }
}

    public partial class GameboardMatcher {

        static IMatcher _matcherMovementCost;

        public static IMatcher MovementCost {
            get {
                if(_matcherMovementCost == null) {
                    var matcher = (Matcher)Matcher.AllOf(GameboardComponentIds.MovementCost);
                    matcher.componentNames = GameboardComponentIds.componentNames;
                    _matcherMovementCost = matcher;
                }

                return _matcherMovementCost;
            }
        }
    }
